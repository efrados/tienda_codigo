<%#
# Index

This view is the template for the index page.
It is responsible for rendering the search bar, header and pagination.
It renders the `_table` partial to display details about the resources.

## Local variables:

- `page`:
  An instance of [Administrate::Page::Collection][1].
  Contains helper methods to help display a table,
  and knows which attributes should be displayed in the resource's table.
- `resources`:
  An instance of `ActiveRecord::Relation` containing the resources
  that match the user's search criteria.
  By default, these resources are passed to the table partial to be displayed.
- `search_term`:
  A string containing the term the user has searched for, if any.
- `show_search_bar`:
  A boolean that determines if the search bar should be shown.

[1]: http://www.rubydoc.info/gems/administrate/Administrate/Page/Collection
%>

<% content_for(:title) do %>
  <%= display_resource_name(page.resource_name) %>
<% end %>

<header class="main-content__header" role="banner">
  <h1 class="main-content__page-title" id="page-title">
    <%= content_for(:title) %>

  </h1>

  <% if show_search_bar %>
    <%= render(
      "search",
      search_term: search_term,
      resource_name: display_resource_name(page.resource_name)
    ) %>
  <% end %>
<!-- params {"query_product"=>{"direction"=>"asc", "order"=>"product"}, "controller"=>"admin/query_products", "action"=>"index"} -->
<!-- params "query_products"=>{"direction"=>"desc", "order"=>"query_name"}, "controller"=>"admin/query_products", "action"=>"index"} query_products -->
<!-- query_products?query_product%5Bdirection%5D=desc&query_product%5Border%5D=query_name -->
<!-- query_products?query_product%5B%5D%5Bdirection%5D=desc&query_product%5B%5D%5Border%5D=query_name -->
  <div>
    <%= link_to(
      t(
        "administrate.actions.new_resource",
        name: display_resource_name(page.resource_name, singular: true).downcase
      ),
      [:new, namespace, page.resource_path],
      class: "button",
    ) if valid_action?(:new) && show_action?(:new, new_resource) %>
  </div>

</header>
<div style= "margin-left: 30px">
  <% @custom_filter_param = params[:query_product][:custom_filter] if params[:query_product] %>
  <%= form_for :query_product, url: '#', method: :get, html: { class: "g-1" } do |f| %>
     <div class="field-unit field-unit--belongs-to field-unit--optional">
      <%= f.select(:custom_filter,
                   [ ["No filter", 0], ["Only Registered Users Questions",1], ["Only Unanswered Questions",2], ["Only Unanswered Registered Users Questions",3]],
                   {selected: @custom_filter_param, prompt: "Select filter"}, {class: 'selectized', style: 'width:30%'}) %>
      <button class="button button--alt" type="submit" style="margin: 3px">
        Filter
      </button>
      </div>

    <div class="col-auto">
    </div>
  <% end %>
</div>
<section class="main-content__body main-content__body--flush">
  <%= render(
    "collection",
    collection_presenter: page,
    collection_field_name: resource_name,
    page: page,
    resources: resources,
    table_title: "page-title"
  ) %>

  <%= paginate resources, param_name: '_page' %>
</section>
